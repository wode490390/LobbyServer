package cn.wode490390.mcbe.lobby.network;

import cn.wode490390.mcbe.lobby.Main;
import com.nukkitx.math.vector.Vector2f;
import com.nukkitx.math.vector.Vector3f;
import com.nukkitx.math.vector.Vector3i;
import com.nukkitx.nbt.NBTInputStream;
import com.nukkitx.nbt.NbtList;
import com.nukkitx.nbt.NbtMap;
import com.nukkitx.nbt.NbtType;
import com.nukkitx.nbt.NbtUtils;
import com.nukkitx.protocol.bedrock.BedrockPacketCodec;
import com.nukkitx.protocol.bedrock.data.AuthoritativeMovementMode;
import com.nukkitx.protocol.bedrock.data.GamePublishSetting;
import com.nukkitx.protocol.bedrock.data.GameType;
import com.nukkitx.protocol.bedrock.data.PlayerPermission;
import com.nukkitx.protocol.bedrock.data.SpawnBiomeType;
import com.nukkitx.protocol.bedrock.packet.*;
import com.nukkitx.protocol.bedrock.v408.Bedrock_v408;
import io.netty.buffer.ByteBufInputStream;
import io.netty.buffer.Unpooled;

import java.net.InetSocketAddress;
import java.util.Base64;

public class ServerPacketFactory {

    public static final BedrockPacketCodec CODEC = Bedrock_v408.V408_CODEC;

    private static Object bytes2Nbt(byte[] bytes) {
        try (NBTInputStream reader = NbtUtils.createNetworkReader(new ByteBufInputStream(Unpooled.wrappedBuffer(bytes)))) {
            return reader.readTag();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    private static final StartGamePacket startGamePacket = new StartGamePacket();
    static {
        startGamePacket.setUniqueEntityId(0);
        startGamePacket.setRuntimeEntityId(0);
        startGamePacket.setPlayerGameType(GameType.SURVIVAL);
        startGamePacket.setPlayerPosition(Vector3f.ZERO);
        startGamePacket.setRotation(Vector2f.ZERO);
        startGamePacket.setSeed(0);
        startGamePacket.setSpawnBiomeType(SpawnBiomeType.DEFAULT);
        startGamePacket.setCustomBiomeName("");
        startGamePacket.setDimensionId(0);
        startGamePacket.setGeneratorId(0);
        startGamePacket.setLevelGameType(GameType.SURVIVAL);
        startGamePacket.setDifficulty(0);
        startGamePacket.setDefaultSpawn(Vector3i.ZERO);
        startGamePacket.setAchievementsDisabled(true);
        startGamePacket.setDayCycleStopTime(0);
        startGamePacket.setEduEditionOffers(0);
        startGamePacket.setEduFeaturesEnabled(false);
        startGamePacket.setEducationProductionId("");
        startGamePacket.setRainLevel(0);
        startGamePacket.setLightningLevel(0);
        startGamePacket.setPlatformLockedContentConfirmed(false);
        startGamePacket.setMultiplayerGame(true);
        startGamePacket.setBroadcastingToLan(true);
        startGamePacket.setXblBroadcastMode(GamePublishSetting.PUBLIC);
        startGamePacket.setPlatformBroadcastMode(GamePublishSetting.PUBLIC);
        startGamePacket.setCommandsEnabled(false);
        startGamePacket.setTexturePacksRequired(false);
        startGamePacket.setExperimentsPreviouslyToggled(false);
        startGamePacket.setBonusChestEnabled(false);
        startGamePacket.setStartingWithMap(false);
        startGamePacket.setTrustingPlayers(false);
        startGamePacket.setDefaultPlayerPermission(PlayerPermission.MEMBER);
        startGamePacket.setServerChunkTickRange(4);
        startGamePacket.setBehaviorPackLocked(false);
        startGamePacket.setResourcePackLocked(false);
        startGamePacket.setFromLockedWorldTemplate(false);
        startGamePacket.setUsingMsaGamertagsOnly(false);
        startGamePacket.setFromWorldTemplate(false);
        startGamePacket.setWorldTemplateOptionLocked(false);
        startGamePacket.setOnlySpawningV1Villagers(false);
        startGamePacket.setVanillaVersion(CODEC.getMinecraftVersion());
        startGamePacket.setLimitedWorldWidth(0);
        startGamePacket.setLimitedWorldHeight(0);
        startGamePacket.setNetherType(false);
        startGamePacket.setForceExperimentalGameplay(false);
        startGamePacket.setLevelId("");
        startGamePacket.setLevelName("");
        startGamePacket.setPremiumWorldTemplateId("");
        startGamePacket.setTrial(false);
        startGamePacket.setAuthoritativeMovementMode(AuthoritativeMovementMode.CLIENT);
        startGamePacket.setCurrentTick(0);
        startGamePacket.setEnchantmentSeed(0);
        startGamePacket.setBlockPalette(new NbtList<>(NbtType.COMPOUND, NbtMap.builder()
                .putCompound("block", NbtMap.builder()
                        .putString("name", "minecraft:air")
                        .putCompound("states", NbtMap.EMPTY)
                        .build())
                .putShort("id", (short) 0)
                .build()));
        startGamePacket.setMultiplayerCorrelationId("");
        startGamePacket.setInventoriesServerAuthoritative(false);
    }
    public static StartGamePacket getStartGamePacket() {
        return startGamePacket;
    }

    private static final PlayStatusPacket playStatusPacket0 = new PlayStatusPacket();
    static {
        playStatusPacket0.setStatus(PlayStatusPacket.Status.LOGIN_SUCCESS);
    }
    public static PlayStatusPacket getPlayStatusPacket0() {
        return playStatusPacket0;
    }

    private static final ResourcePacksInfoPacket resourcePacksInfoPacket = new ResourcePacksInfoPacket();
    static {
        resourcePacksInfoPacket.setForcedToAccept(false);
        resourcePacksInfoPacket.setScriptingEnabled(false);
    }
    public static ResourcePacksInfoPacket getResourcePacksInfoPacket() {
        return resourcePacksInfoPacket;
    }

    private static final ResourcePackStackPacket resourcePackStackPacket = new ResourcePackStackPacket();
    static {
        resourcePackStackPacket.setForcedToAccept(false);
        resourcePackStackPacket.setExperimentsPreviouslyToggled(false);
        resourcePackStackPacket.setGameVersion(CODEC.getMinecraftVersion());
    }
    public static ResourcePackStackPacket getResourcePackStackPacket() {
        return resourcePackStackPacket;
    }

    private static final PlayStatusPacket playStatusPacket3 = new PlayStatusPacket();
    static {
        playStatusPacket3.setStatus(PlayStatusPacket.Status.PLAYER_SPAWN);
    }
    public static PlayStatusPacket getPlayStatusPacket3() {
        return playStatusPacket3;
    }

    private static final ModalFormRequestPacket modalFormRequestPacket = new ModalFormRequestPacket();
    static {
        modalFormRequestPacket.setFormId(0);
        modalFormRequestPacket.setFormData(Main.getInstance().getMenu().toForm());
    }
    public static ModalFormRequestPacket createModalFormRequestPacket() {
        return modalFormRequestPacket;
    }

    public static TransferPacket createTransferPacket(InetSocketAddress address) {
        TransferPacket transferPacket = new TransferPacket();
        transferPacket.setAddress(address.getAddress().getHostName());
        transferPacket.setPort(address.getPort());
        return transferPacket;
    }

    public static DisconnectPacket createDisconnectPacket(String msg) {
        DisconnectPacket disconnectPacket = new DisconnectPacket();
        disconnectPacket.setKickMessage(msg);
        return disconnectPacket;
    }

    private static final PlayStatusPacket playStatusPacket1 = new PlayStatusPacket();
    static {
        playStatusPacket1.setStatus(PlayStatusPacket.Status.LOGIN_FAILED_CLIENT_OLD);
    }
    public static PlayStatusPacket getPlayStatusPacket1() {
        return playStatusPacket1;
    }

    private static final PlayStatusPacket playStatusPacket2 = new PlayStatusPacket();
    static {
        playStatusPacket2.setStatus(PlayStatusPacket.Status.LOGIN_FAILED_SERVER_OLD);
    }
    public static PlayStatusPacket getPlayStatusPacket2() {
        return playStatusPacket2;
    }

    private static final ChunkRadiusUpdatedPacket chunkRadiusUpdatedPacket = new ChunkRadiusUpdatedPacket();
    static {
        chunkRadiusUpdatedPacket.setRadius(1);
    }
    public static ChunkRadiusUpdatedPacket getChunkRadiusUpdatedPacket1() {
        return chunkRadiusUpdatedPacket;
    }

    private static final BiomeDefinitionListPacket biomeDefinitionListPacket = new BiomeDefinitionListPacket();
    static {
        biomeDefinitionListPacket.setDefinitions((NbtMap) bytes2Nbt(Base64.getDecoder().decode("")));
    }
    public static BiomeDefinitionListPacket getBiomeDefinitionListPacket() {
        return biomeDefinitionListPacket;
    }

    private static final NetworkSettingsPacket networkSettingsPacket1 = new NetworkSettingsPacket();
    static {
        networkSettingsPacket1.setCompressionThreshold(1);
    }
    public static NetworkSettingsPacket getNetworkSettingsPacket1() {
        return networkSettingsPacket1;
    }
}
